# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net
trigger:
  batch: true
  branches:
    include:
    - master
  paths:
    exclude:
    - README.md

pool:
  vmImage: 'windows-latest'

variables:
  solution: 'APSI.sln'
  buildPlatform: 'x64'
  buildConfiguration: 'Release'
  APSILIBS: '$(Build.SourcesDirectory)\tools\Libs'

steps:
- task: PowerShell@2
  displayName: 'Download 3rd party libraries'
  inputs:
    filePath: 'tools\DownloadLibs.ps1'

- task: NuGetToolInstaller@0

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: NuGetCommand@2
  displayName: 'NuGet restore Configuration Packages'
  inputs:
    restoreSolution: tools/config/packages.config
    restoreDirectory: ConfigPackages

- task: CredScan@2
  displayName: 'Run CredScan'
  inputs:
    toolMajorVersion: 'V2'
    outputFormat: 'sarif'
    debugMode: false

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: RoslynAnalyzers@2
  displayName: 'Run Roslyn Analyzers'

- task: CmdLine@2
  displayName: 'Copy dependencies for Tests'
  inputs:
    script: |
      echo Copying library DLLs for test execution
      
      copy %APSILIBS%\libzmq\dll\x64\Release\libzmq.dll x64\Release
      copy %APSILIBS%\libzmqpp\lib\x64\Release\zmqpp.dll x64\Release
    workingDirectory: '$(Build.SourcesDirectory)'
    failOnStderr: true

- task: VSTest@2
  inputs:
    testSelector: 'testAssemblies'
    testAssemblyVer2: |
      **\*IntegrationTests.exe
      **\*APSITests.exe
    searchFolder: '$(System.DefaultWorkingDirectory)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: PublishSymbols@2
  displayName: 'Publish symbols path'
  inputs:
    SearchPattern: '**\bin\**\*.pdb'
    PublishSymbols: false
  continueOnError: true

- task: CopyFiles@2
  displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
  inputs:
    SourceFolder: '$(build.sourcesdirectory)'
    Contents: '**\$(BuildConfiguration)\**\?(*.exe|*.dll|*.lib)'
    TargetFolder: '$(build.artifactstagingdirectory)'

- task: BinSkim@3
  displayName: 'Run BinSkim '
  inputs:
    InputType: Basic
    AnalyzeTarget: '$(Build.ArtifactStagingDirectory)\bin\x64\Release\*.exe'
    AnalyzeSymPath: '**\bin\**\*.pdb'

- task: ComponentGovernanceComponentDetection@0
  displayName: 'Component Detection'
  inputs:
    scanType: 'Register'
    verbosity: 'Verbose'
    alertWarningLevel: 'High'

- task: PublishSecurityAnalysisLogs@2
  inputs:
    ArtifactName: 'CodeAnalysisLogs'
    ArtifactType: 'Container'
    AllTools: true
    ToolLogsNotFoundAction: 'Standard'

- task: uploadScanResults@1
  inputs:
    uploadUrl: 'https://airbuildscan.azurewebsites.net/api/Upload'
    areaPathParent: '/'
    areaPathChild: 'PrivateAI'
  enabled: false
